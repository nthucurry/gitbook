input {
  beats {
    host => "t-elk"
    port => "1040"
    codec => "json"
  }
}

filter {
  json {
    source => "message"
    target => "log"
  }

  if [properties][msg] =~ "DNS" or [properties][msg] =~ "ICMP" or [properties][msg] =~ "Failed to resolve FQDN" {
    drop {}
  }

  mutate {
    remove_field => [ "path", "host", "agent", "cloud", "log", "ecs" ]
  }

  mutate {
    remove_field => [ "properties", "resourceId", "operationName" ]
    add_field => {
      "msg" => "%{[properties][msg]}"
    }
  }

  # if [msg] =~ "HTTPS" {
  #   grok {
  #     match => [
  #       "msg",
  #         "%{DATA:osiLevel}\s+request from\s+%{IPORHOST:sourceIP}:%{INT:sourcePort}\s+to\s+%{IPORHOST:destination}:%{INT:destinationPort}.\s+Action:\s+%{DATA:action.}.\s+%{DATA:rule}\n"
  #     ]
  #   }
  # }
}

output {
  elasticsearch {
    hosts => "http://t-elk:9200"
    #user => "elastic"
    #password => "password"
    index => "azure-firewall-%{+YYYY.MM.dd}"
  }
}